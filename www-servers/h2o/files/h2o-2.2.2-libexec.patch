--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -494,13 +494,13 @@
     INSTALL(FILES "${CMAKE_BINARY_DIR}/libh2o-evloop.pc" DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig)
 ENDIF ()
 
-INSTALL(PROGRAMS share/h2o/annotate-backtrace-symbols share/h2o/fastcgi-cgi share/h2o/fetch-ocsp-response share/h2o/kill-on-close share/h2o/setuidgid share/h2o/start_server DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/h2o)
+INSTALL(PROGRAMS share/h2o/annotate-backtrace-symbols share/h2o/fastcgi-cgi share/h2o/fetch-ocsp-response share/h2o/kill-on-close share/h2o/setuidgid share/h2o/start_server DESTINATION ${CMAKE_INSTALL_LIBEXECDIR}/h2o)
 INSTALL(FILES share/h2o/ca-bundle.crt DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/h2o)
 INSTALL(FILES share/h2o/status/index.html DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/h2o/status)
 INSTALL(DIRECTORY doc/ DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/doc/h2o PATTERN "Makefile" EXCLUDE PATTERN "README.md" EXCLUDE)
 INSTALL(DIRECTORY examples/ DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/doc/h2o/examples)
 IF (WITH_MRUBY)
-    INSTALL(DIRECTORY share/h2o/mruby DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/h2o)
+    INSTALL(DIRECTORY share/h2o/mruby DESTINATION ${CMAKE_INSTALL_LIBEXECDIR}/h2o)
 ENDIF (WITH_MRUBY)
 
 # tests
--- a/lib/handler/mruby.c
+++ b/lib/handler/mruby.c
@@ -61,19 +61,19 @@
         root = H2O_TO_STR(H2O_ROOT);
     mrb_gv_set(mrb, mrb_intern_lit(mrb, "$H2O_ROOT"), mrb_str_new(mrb, root, strlen(root)));
 
-    h2o_mruby_eval_expr(mrb, "$LOAD_PATH << \"#{$H2O_ROOT}/share/h2o/mruby\"");
+    h2o_mruby_eval_expr(mrb, "$LOAD_PATH << \"#{$H2O_ROOT}/libexec/h2o/mruby\"");
     h2o_mruby_assert(mrb);
 
     /* require core modules and include built-in libraries */
-    h2o_mruby_eval_expr(mrb, "require \"#{$H2O_ROOT}/share/h2o/mruby/preloads.rb\"");
+    h2o_mruby_eval_expr(mrb, "require \"#{$H2O_ROOT}/libexec/h2o/mruby/preloads.rb\"");
     if (mrb->exc != NULL) {
         if (mrb_obj_is_instance_of(mrb, mrb_obj_value(mrb->exc), mrb_class_get(mrb, "LoadError"))) {
             fprintf(stderr, "file \"%s/%s\" not found. Did you forget to run `make install` ?", root,
-                    "share/h2o/mruby/preloads.rb");
+                    "libexec/h2o/mruby/preloads.rb");
         } else {
             mrb_value obj = mrb_funcall(mrb, mrb_obj_value(mrb->exc), "inspect", 0);
             struct RString *error = mrb_str_ptr(obj);
-            fprintf(stderr, "an error occurred while loading %s/%s: %s", root, "share/h2o/mruby/preloads.rb", error->as.heap.ptr);
+            fprintf(stderr, "an error occurred while loading %s/%s: %s", root, "libexec/h2o/mruby/preloads.rb", error->as.heap.ptr);
         }
         abort();
     }
--- a/lib/handler/configurator/fastcgi.c
+++ b/lib/handler/configurator/fastcgi.c
@@ -284,12 +284,12 @@
 
     { /* build args */
         size_t i = 0;
-        argv[i++] = kill_on_close_cmd_path = h2o_configurator_get_cmd_path("share/h2o/kill-on-close");
+        argv[i++] = kill_on_close_cmd_path = h2o_configurator_get_cmd_path("libexec/h2o/kill-on-close");
         argv[i++] = "--rm";
         argv[i++] = dirname;
         argv[i++] = "--";
         if (spawn_user != NULL) {
-            argv[i++] = setuidgid_cmd_path = h2o_configurator_get_cmd_path("share/h2o/setuidgid");
+            argv[i++] = setuidgid_cmd_path = h2o_configurator_get_cmd_path("libexec/h2o/setuidgid");
             argv[i++] = spawn_user;
         }
         argv[i++] = "/bin/sh";
--- a/share/h2o/setuidgid
+++ b/share/h2o/setuidgid
@@ -6,7 +6,7 @@
 use warnings;
 use POSIX qw(setuid setgid);
 
-die "usage: share/h2o/setuidgid username child\n"
+die "usage: /usr/libexec/h2o/setuidgid username child\n"
     unless @ARGV >= 2;
 my $username = shift @ARGV;
 
--- a/src/main.c
+++ b/src/main.c
@@ -186,7 +186,7 @@
     0,                                      /* shutdown_requested */
     H2O_BARRIER_INIT(SIZE_MAX),             /* startup_sync_barrier */
     {{0}},                                  /* state */
-    "share/h2o/annotate-backtrace-symbols", /* crash_handler */
+    "libexec/h2o/annotate-backtrace-symbols", /* crash_handler */
     0,                                      /* crash_handler_wait_pipe_close */
 };
 
@@ -773,7 +773,7 @@
 #endif
     pthread_mutex_init(&ssl_config->ocsp_stapling.response.mutex, NULL);
     ssl_config->ocsp_stapling.cmd =
-        ocsp_update_cmd != NULL ? h2o_strdup(NULL, ocsp_update_cmd->data.scalar, SIZE_MAX).base : "share/h2o/fetch-ocsp-response";
+        ocsp_update_cmd != NULL ? h2o_strdup(NULL, ocsp_update_cmd->data.scalar, SIZE_MAX).base : "libexec/h2o/fetch-ocsp-response";
     if (ocsp_update_interval != 0) {
         switch (conf.run_mode) {
         case RUN_MODE_WORKER:
@@ -1669,7 +1669,7 @@
     size_t i;
 
     h2o_vector_reserve(NULL, &args, 1);
-    args.entries[args.size++] = h2o_configurator_get_cmd_path("share/h2o/start_server");
+    args.entries[args.size++] = h2o_configurator_get_cmd_path("libexec/h2o/start_server");
 
     /* error-log and pid-file are the directives that are handled by server-starter */
     if (conf.pid_file != NULL) {
