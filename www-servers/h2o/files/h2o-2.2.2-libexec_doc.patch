--- a/doc/configure/base_directives.html
+++ b/doc/configure/base_directives.html
@@ -930,7 +930,7 @@
 <dt><a href="configure/syntax_and_structure.html#config_levels">Level</a>:</dt>
 <dd>global</dd>
 <dt>Default:</dt>
-<dd><code><pre>crash-handler: &quot;${H2O_ROOT}/share/h2o/annotate-backtrace-symbols&quot;</pre></code>
+<dd><code><pre>crash-handler: &quot;${H2O_ROOT}/libexec/h2o/annotate-backtrace-symbols&quot;</pre></code>
 </dl>
 
 <div id="crash-handler.wait-pipe-close" class="directive-head">
--- a/doc/configure/basic_auth.html
+++ b/doc/configure/basic_auth.html
@@ -83,7 +83,7 @@
 
 
 <p>
-In H2O versions prior to 2.0, you should specify <code>"#{$H2O_ROOT}/share/h2o/mruby/htpasswd.rb"</code> as the argument to <code>require</code>, since the directory is not registered as part of <code>$LOAD_PATH</code>.
+In H2O versions prior to 2.0, you should specify <code>"#{$H2O_ROOT}/libexec/h2o/mruby/htpasswd.rb"</code> as the argument to <code>require</code>, since the directory is not registered as part of <code>$LOAD_PATH</code>.
 </p>
 
 For convenience, the mruby script also forbids access to files or directories that start with <code>.ht</code>.
--- a/doc/configure/cgi.html
+++ b/doc/configure/cgi.html
@@ -60,7 +60,7 @@
 
 
 <p>
-Starting from version 1.7, H2O comes with a FastCGI-to-CGI gateway (<code>fastcgi-cgi</code>), which can be found under <code>share/h2o</code> directory of the installation path.
+Starting from version 1.7, H2O comes with a FastCGI-to-CGI gateway (<code>fastcgi-cgi</code>), which can be found under <code>/usr/libexec/h2o</code> directory of the installation path.
 The gateway can be used for running CGI scripts through the FastCGI handler.
 </p>
 
@@ -74,7 +74,7 @@
 <pre><code>file.custom-handler:
   extension: .cgi
   fastcgi.spawn:
-    command: &quot;exec $H2O_ROOT/share/h2o/fastcgi-cgi&quot;
+    command: &quot;exec $H2O_ROOT/libexec/h2o/fastcgi-cgi&quot;
 </code></pre>
 </div>
 
@@ -82,10 +82,10 @@
 The gateway also provides options to for tuning the behavior.  A full list of options can be obtained by running the gateway directly with <code>--help</code> option.
 
 <div class="example">
-<div class="caption">Example. Output of <code>share/h2o/fastcgi-cgi --help</code></div>
-<pre><code>$ share/h2o/fastcgi-cgi --help
+<div class="caption">Example. Output of <code>/usr/libexec/h2o/fastcgi-cgi --help</code></div>
+<pre><code>$ /usr/libexec/h2o/fastcgi-cgi --help
 Usage:
-    share/h2o/fastcgi-cgi [options]
+    /usr/libexec/h2o/fastcgi-cgi [options]
 
 Options:
   --listen=sockfn    path to the UNIX socket.  If specified, the program will
--- a/doc/configure/command_options.html
+++ b/doc/configure/command_options.html
@@ -74,7 +74,7 @@
                                the errors are logged to the file instead of
                                being emitted to STDERR
                      - master: invoked process becomes a master process (using
-                               the `share/h2o/start_server` command) and spawns
+                               the `/usr/libexec/h2o/start_server` command) and spawns
                                a worker process for handling incoming
                                connections. Users may send SIGHUP to the master
                                process to reconfigure or upgrade the server.
--- a/doc/configure/proxy_directives.html
+++ b/doc/configure/proxy_directives.html
@@ -368,7 +368,7 @@
 </p>
 
 <p>
-By default, H2O uses <code>share/h2o/ca-bundle.crt</code>.  The file contains a set of trusted root certificates maintained by Mozilla, downloaded and converted using <a href="https://curl.haxx.se/docs/mk-ca-bundle.html">mk-ca-bundle.pl</a>.
+By default, H2O uses <code>/usr/share/h2o/ca-bundle.crt</code>.  The file contains a set of trusted root certificates maintained by Mozilla, downloaded and converted using <a href="https://curl.haxx.se/docs/mk-ca-bundle.html">mk-ca-bundle.pl</a>.
 </p>
 
 </dd>
