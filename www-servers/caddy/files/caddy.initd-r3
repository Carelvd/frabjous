#!/sbin/openrc-run
# Copyright 1999-2017 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2

name="Caddy"
extra_commands="configtest"
extra_started_commands="reload"
description="Fast, cross-platform HTTP/2 web server with automatic HTTPS"
description_configtest="Run Caddy' internal config check"
description_reload="Reload Caddy configuration"

: ${CADDY_USER:=caddy}
: ${CADDY_CONFIG:="/etc/caddy/Caddyfile"}

command="/usr/sbin/caddy"
command_args="-conf=\"${CADDY_CONFIG}\" ${CADDY_OPTS}"
command_user="${CADDY_USER}"
command_background=true
pidfile="/run/${SVCNAME}.pid"
required_files="${CADDY_CONFIG}"
retry=${CADDY_TERMTIMEOUT:-"TERM/60/KILL/5"}
start_stop_daemon_args="-e \"CADDYPATH=${CADDY_CERTPATH}\" \
	${SSD_OPTS:-"--wait 1000"}"

depend() {
	use net
	after dns
}

start_pre() {
	checkpath -d -m 0750 -o ${CADDY_USER} \
		"${CADDY_CERTPATH}" "${CADDY_LOG%/*}"

	if [ "${RC_CMD}" != "restart" ]; then
		configtest || return 1
	fi
}

stop_pre() {
	if [ "${RC_CMD}" = "restart" ]; then
		configtest || return 1
	fi
}

reload() {
	configtest || return 1
	ebegin "Refreshing ${name} configuration"
	kill -USR1 $(cat ${pidfile}) &>/dev/null
	eend $? "Failed to reload ${name}"
}

configtest() {
	ebegin "Checking ${name} configuration"
	if ! ${command} -validate -conf="${CADDY_CONFIG}" &>/dev/null; then
		${command} -validate -conf="${CADDY_CONFIG}"
	fi
	eend $? "Failed, please correct the errors above"
}
